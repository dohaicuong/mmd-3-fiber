{"version":3,"sources":["utils/loadAnimation.ts","utils/useLoadMMD.ts","utils/playAction.ts","pages/Standing.tsx","utils/useIdle.ts","pages/WaveFile/MusicLight.tsx","pages/WaveFile/MusicStage.tsx","pages/WaveFile/MusicCamera.tsx","pages/WaveFile/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["loadModelWithActions","modelUrl","motions","a","loader","MMDLoader","loadModel","model","mixer","AnimationMixer","Promise","all","map","motion","loadAnimation","url","clip","animation","clipAction","name","actions","resolve","reject","load","_progress","error","rootModel","animationUrl","animationClip","useLoadMMD","options","useState","state","setState","useEffect","data","start","playAction","actionName","idleName","idle","find","x","action","addEventListener","reset","play","fadeOut","setEffectiveTimeScale","setEffectiveWeight","fadeIn","setLoop","LoopOnce","StandingPage","style","width","height","shadowMap","pixelRatio","window","devicePixelRatio","camera","position","intensity","distance","decay","color","angle","penumbra","castShadow","shadowBias","Miku","visible","useIdle","useFrame","_","delta","update","onTouchMiku","object","dispose","onClick","Beams","beams","useRef","current","fingerPosition","skeleton","bones","getWorldPosition","Vector3","i","children","length","copy","lerp","ref","Array","fill","_beam","index","count","Beam","mesh","geometry","SphereBufferGeometry","attach","opacity","transparent","MusicLight","MusicSpotLight","spotLight","React","shadow","bias","Color","MusicDirectionalLight","directionalLight","mapSize","y","right","top","left","bottom","MusicStage","MusicStageBack","wireframe","MusicStageGround","receiveShadow","CircleBufferGeometry","rotation","Math","PI","emissive","shadowSide","FrontSide","MusicCamera","setDefaultCamera","useThree","fov","aspect","innerWidth","innerHeight","near","far","WaveFilePage","gl2","gl","antialias","Suspense","fallback","useLoader","model2","model3","model4","model5","helper","setHelper","MMDAnimationHelper","cameraMotionClip","add","loadAudio","audio","delayTime","haruhiMotion","physics","ashinaMotion","yukiMotion","kyonMotion","koizumiMotion","AudioLoader","listener","AudioListener","z","buffer","Audio","setBuffer","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c264c473.chunk.js","sourcesContent":["import { AnimationAction, AnimationClip, AnimationMixer, SkinnedMesh } from \"three\"\nimport { MMDLoader } from \"three/examples/jsm/loaders/MMDLoader\"\n\nexport type Motion = {\n  name: string\n  url: string\n}\nexport type Action = {\n  name: string\n  animation: AnimationAction\n}\n\nexport const loadModelWithActions = async (modelUrl: string, motions?: Motion[]) => {\n  const loader = new MMDLoader()\n  const model = await loadModel(loader, modelUrl)\n  const mixer = new AnimationMixer(model)\n\n  const actions = await Promise.all(\n    motions?.map(async motion => {\n      const clip = await loadAnimation(loader, model, motion.url)\n      const animation = mixer.clipAction(clip)\n  \n      return {\n        name: motion.name,\n        animation,\n      }\n    }) ?? []\n  )\n\n  // TODO\n  // const actionList = actions.reduce((total, current) => {\n  //   total[current.name] = current.animation\n  //   return total\n  // }, {})\n\n  return {\n    model,\n    mixer,\n    actions\n  }\n}\n\nexport const loadModel = (loader: MMDLoader, modelUrl: string): Promise<SkinnedMesh> => {\n  return new Promise((resolve, reject) => {\n    loader.load(\n      modelUrl,\n      model => resolve(model),\n      _progress => {},\n      error => reject(error)\n    )\n  })\n}\n\nexport const loadAnimation = (loader: MMDLoader, rootModel: SkinnedMesh, animationUrl: string): Promise<AnimationClip> => {\n  return new Promise((resolve, reject) => {\n    loader.loadAnimation(\n      animationUrl,\n      rootModel,\n      animationClip => resolve(animationClip as AnimationClip),\n      _progress => {},\n      error => reject(error)\n    )\n  })\n}","import { useEffect, useState } from \"react\"\nimport { AnimationMixer, SkinnedMesh } from \"three\"\nimport { Action, loadModelWithActions, Motion } from \"./loadAnimation\"\nimport { playAction as play } from 'utils/playAction'\n\ntype useLoadMMDOptions = {\n  modelUrl: string\n  motions?: Motion[]\n}\ntype useLoadMMDPayload = {\n  model?: SkinnedMesh\n  mixer?: AnimationMixer\n  actions?: Action[]\n}\nconst useLoadMMD = (options: useLoadMMDOptions) => {\n  const [state, setState] = useState<useLoadMMDPayload>({})\n  useEffect(() => {\n    const start = async () => {\n      const data = await loadModelWithActions(\n        options.modelUrl,\n        options.motions\n      )\n      setState(data)\n    }\n    start()\n    // eslint-disable-next-line\n  }, [])\n\n  const playAction = (actionName: string, idleName: string) => {\n    const { mixer, actions } = state\n    const idle = actions?.find(x => x.name === idleName)?.animation\n    const action = actions?.find(x => x.name === actionName)?.animation\n    if(!mixer || !action || !idle) return null\n\n    play(action, idle, mixer)\n  }\n\n  return {\n    ...state,\n    playAction\n  }\n}\nexport default useLoadMMD","import { AnimationAction, AnimationMixer, LoopOnce } from \"three\"\n\nexport const playAction = (action: AnimationAction, idle: AnimationAction, mixer: AnimationMixer) => {\n  mixer.addEventListener('finished', () => {\n    idle.reset().play()\n  })\n\n  idle.fadeOut(1)\n  action\n    .reset()\n    .setEffectiveTimeScale(1)\n    .setEffectiveWeight(1)\n    .fadeIn(1)\n    .setLoop(LoopOnce, 0)\n    .play()\n}\n","import React, { useRef } from 'react'\n\nimport { Canvas, useFrame } from 'react-three-fiber'\nimport { OrbitControls, Stars } from '@react-three/drei'\nimport useLoadMMD from 'utils/useLoadMMD'\nimport { useIdle } from 'utils/useIdle'\nimport { Group, Mesh, SkinnedMesh, SphereBufferGeometry, Vector3 } from 'three'\n\nconst StandingPage = () => {\n  return (\n    <Canvas\n      style={{ width: '100vw', height: '100vh' }}\n      shadowMap\n      pixelRatio={window.devicePixelRatio}\n      camera={{\n        position: [0, 10, 40],\n      }}\n    >\n      {/* <ambientLight /> */}\n      <pointLight position={[0, 6, 0]} intensity={0.4} distance={10} decay={1} />\n      <spotLight\n        color='223344'\n        position={[5, 20, 15]}\n        angle={0.8}\n        intensity={0.7}\n        penumbra={0.8}\n        castShadow\n        shadowBias={-0.001}\n      />\n      {/* <directionalLight\n        color='333333'\n        position={[-15, 15, 20]}\n        castShadow\n        shadow={{\n          // @ts-ignore\n          mapSize: { x: 1024, y: 1024 },\n          // @ts-ignore\n          camera: {\n            right: 20,\n            top: 20,\n            left: -20,\n            bottom: -20,\n          }\n        }}\n      /> */}\n\n      <OrbitControls />\n\n      <Stars />\n\n      <Miku />\n    </Canvas>\n  )\n}\nexport default StandingPage\n\nconst Miku = () => {\n  const { model, mixer, actions, playAction } = useLoadMMD({\n    modelUrl: 'resources/miku_v2.pmd',\n    motions: [\n      { name: 'idle', url: 'resources/standing.vmd' },\n      { name: 'waving', url: 'resources/waving.vmd' },\n    ]\n  })\n  useIdle({ model, actions })\n  useFrame((_, delta) => mixer?.update(delta))\n\n  // const { camera } = useThree()\n  // const modelPositionString = JSON.stringify(model?.position)\n  // useEffect(() => {\n  //   if(model?.position) {\n  //     console.log('here')\n  //     camera.lookAt(model?.position)\n  //   }\n  // }, [modelPositionString])\n\n  const onTouchMiku = async () => {\n    playAction('waving', 'idle')\n  }\n\n  if(!model) return null\n  return (\n    <>\n      <primitive\n        object={model}\n        dispose={null}\n        onClick={onTouchMiku}\n      />\n      <Beams model={model} />\n    </>\n  )\n}\n\nconst Beams = ({ model }: { model: SkinnedMesh }) => {\n  const beams = useRef<Group>()\n  const count = 200\n  \n  useFrame(() => {\n    if(!beams.current) return null\n\n    const num = 20\n    const fingerPosition = model.skeleton.bones[110].getWorldPosition(new Vector3( 0, 0, 0 ))\n    for(let i = beams.current.children.length - 1; i > 0; i--) {\n      if ( i < num ) {\n        beams.current.children[i].position.copy(beams.current.children[0].position).lerp(fingerPosition, i/num)\n      }\n      else {\n        beams.current.children[i].position.copy(beams.current.children[i - num].position)\n      }\n    }\n    beams.current.children[0].position.copy(fingerPosition)\n  })\n\n  return (\n    <group ref={beams}>\n      {Array(count).fill(1).map((_beam, index) => (\n        <Beam\n          key={index}\n          count={count}\n          index={index}\n        />\n      ))}\n    </group>\n  )\n}\nconst Beam = ({ count, index }: { count: number, index: number }) => {\n  const mesh = useRef<Mesh>()\n\n  return (\n    <>\n      <mesh\n        ref={mesh}\n        geometry={new SphereBufferGeometry(0.05, 4)}\n        attach='point-material'\n      />\n      <meshBasicMaterial\n        attach='point-material'\n        opacity={0.25 - 0.25 / count * index}\n        transparent={true}\n        color='ffff88'\n      />\n    </>\n  )\n}\n","import { useEffect } from \"react\"\nimport { SkinnedMesh } from \"three\"\nimport { Action } from \"./loadAnimation\"\n\nexport const useIdle = ({ model, actions }: { model?: SkinnedMesh, actions?: Action[] }) => {\n  useEffect(() => {\n    if(model?.visible) {\n      actions?.find(x => x.name === 'idle')?.animation.play()\n    }\n    // eslint-disable-next-line\n  }, [model?.visible])\n}","import React from 'react'\nimport { Color, DirectionalLight, SpotLight } from \"three\"\n\nconst MusicLight = () => {\n  return (\n    <group>\n      <MusicSpotLight />\n      <MusicDirectionalLight />\n    </group>\n  )\n}\nexport default MusicLight\n\nconst MusicSpotLight = () => {\n  const spotLight = React.useRef<SpotLight>()\n  React.useEffect(() => {\n    if(spotLight.current) {\n      spotLight.current.shadow.bias = -0.001\n    }\n  }, [])\n\n  return (\n    <spotLight\n      castShadow\n      color={new Color(0x8c8c8c)} // 0x223344\n      position={[5, 20, 15]}\n      angle={0.8}\n      intensity={0.7}\n      penumbra={0.8}\n      ref={spotLight}\n    />\n  )\n}\n\nconst MusicDirectionalLight = () => {\n  const directionalLight = React.useRef<DirectionalLight>()\n  React.useEffect(() => {\n    if(directionalLight.current) {\n      directionalLight.current.shadow.mapSize.x = 1024\n      directionalLight.current.shadow.mapSize.y = 1024\n      directionalLight.current.shadow.camera.right = 20\n      directionalLight.current.shadow.camera.top = 20\n      directionalLight.current.shadow.camera.left = -20\n      directionalLight.current.shadow.camera.bottom = -20\n      directionalLight.current.shadow.bias = -0.001\n    }\n  }, [])\n\n  return (\n    <directionalLight\n      castShadow\n      color={new Color(0x8c8c8c)} // 0x333333 0xffffff\n      position={[-15, 15, 20]}\n      ref={directionalLight}\n    />\n  )\n}","import React from 'react'\nimport {\n  CircleBufferGeometry,\n  Color,\n  FrontSide,\n  SphereBufferGeometry,\n  // Mesh,\n  // PlaneBufferGeometry,\n  // Vector3,\n} from 'three'\n\nconst MusicStage = () => {\n  return (\n    <group>\n      <MusicStageBack />\n      <MusicStageGround />\n      {/* <Monitor\n        position={[0, 25, -50]}\n        rotation={[180 * Math.PI / 180, 180 * Math.PI / 180, 180 * Math.PI / 180]}\n      />\n      <Monitor\n        position={[-70, 25, 0]}\n        rotation={[180 * Math.PI / 180, 110 * Math.PI / 180, 180 * Math.PI / 180]}\n      />\n      <Monitor\n        position={[70, 25, 0]}\n        rotation={[180 * Math.PI / 180, -110 * Math.PI / 180, 180 * Math.PI / 180]}\n      /> */}\n    </group>\n  )\n}\nexport default MusicStage\n\nconst MusicStageBack = () => {\n  return (\n    <mesh geometry={new SphereBufferGeometry(256, 32)}>\n      <meshBasicMaterial attach=\"material\" wireframe color={0xffffff} />\n    </mesh>\n  )\n}\nconst MusicStageGround = () => {\n  return (\n    <>\n      <mesh\n        receiveShadow\n        geometry={new CircleBufferGeometry(50, 32)}\n        rotation={[-90 * Math.PI / 180, 0, 0]}\n      >\n        <meshPhongMaterial\n          attach='material'\n          color={new Color(0x444444)}\n          emissive={new Color(0x002222)}\n          shadowSide={FrontSide}\n        />\n      </mesh>\n    </>\n  )\n}\n// const Monitor = (props: any) => {\n//   const edge = React.useRef<Mesh>()\n//   React.useEffect(() => {\n//     if(edge.current) {\n//       edge.current.position.z -= 0.01\n//     }\n//   }, [])\n\n//   // const { gl, scene, camera } = useThree()\n//   // const [composer2, setComposer2] = React.useState<EffectComposer>()\n//   // React.useEffect(() => {\n//     // const effect = new OutlineEffect(gl, {})\n\n//     // const bloomPass = new UnrealBloomPass(\n//     //   new Vector2(window.innerWidth, window.innerHeight),\n//     //   1.0,\n//     //   0.7,\n//     //   0.1\n//     // )\n//     // const copyPass = new ShaderPass(CopyShader)\n//     // copyPass.renderToScreen = true\n//     // const composer = new EffectComposer(gl)\n//     // composer.setSize(window.innerWidth, window.innerHeight)\n//     // composer.addPass(bloomPass)\n//     // composer.addPass(copyPass)\n\n//     // const copyPass2 = new ShaderPass(CopyShader)\n//     // const composer2 = new EffectComposer(gl)\n//     // composer2.readBuffer = composer.readBuffer\n//     // composer2.setSize(window.innerWidth, window.innerHeight)\n//     // composer2.addPass(copyPass2)\n//     // setComposer2(composer2)\n//   // }, [])\n\n//   // useFrame(() => {\n//     // effect.render(scene, camera)\n//     // gl.render(scene, camera)\n//     // composer2?.render()\n//     // composer.render()\n//   // })\n\n//   return (\n//     <>\n//       <mesh\n//         geometry={new PlaneBufferGeometry(100, 40)}\n//         {...props}\n//       >\n//         {/* <shaderMaterial\n//           attach='material'\n//           uniforms={{\n//             strength: { value: 0.20 },\n//             // tDiffuse: { value: composer2?.writeBuffer.texture }\n//           }}\n//           vertexShader=''\n//           fragmentShader=''\n//         /> */}\n//       </mesh>\n      \n//       <mesh\n//         geometry={new PlaneBufferGeometry(100, 40)}\n//         ref={edge}\n//         scale={new Vector3(1, 1, 1).multiplyScalar(1.01)}\n//         {...props}\n//       >\n//         <meshBasicMaterial\n//           attach='material'\n//           color={new Color(0xffffff)}\n//         />\n//       </mesh>\n//     </>\n//   )\n// }","import React from 'react'\nimport { useThree } from 'react-three-fiber'\nimport { PerspectiveCamera } from '@react-three/drei'\nimport { PerspectiveCamera as PerspectiveCameraType } from 'three'\n\nconst MusicCamera = () => {\n  const camera = React.useRef<PerspectiveCameraType>()\n  const { setDefaultCamera } = useThree()\n  React.useEffect(() => {\n    if(camera.current) {\n      setDefaultCamera(camera.current)\n    }\n  }, [setDefaultCamera])\n\n  return (\n    <PerspectiveCamera\n      fov={45}\n      aspect={window.innerWidth / window.innerHeight}\n      near={1}\n      far={2000}\n      position={[0, 15, 50]}\n      ref={camera}\n    />\n  )\n}\n\nexport default MusicCamera\n","import React from 'react'\nimport { Canvas, useFrame, useLoader, useThree } from 'react-three-fiber'\nimport MusicLight from './MusicLight'\nimport MusicStage from './MusicStage'\nimport MusicCamera from './MusicCamera'\n\nimport { MMDLoader } from 'three/examples/jsm/loaders/MMDLoader'\nimport { MMDAnimationHelper } from 'three/examples/jsm/animation/MMDAnimationHelper'\nimport { loadAnimation } from 'utils/loadAnimation'\nimport { Audio, AudioListener, AudioLoader } from 'three'\n\nconst WaveFilePage = () => {\n  return (\n    <Canvas\n      gl2\n      shadowMap\n      gl={{ antialias: true }}\n      pixelRatio={window.devicePixelRatio}\n      style={{ width: window.innerWidth, height: window.innerHeight }}\n    >\n      <MusicLight />\n      <MusicCamera />\n\n      <React.Suspense fallback={null}>\n        <Miku />\n      </React.Suspense>\n\n      <MusicStage />\n    </Canvas>\n  )\n}\nexport default WaveFilePage\n\nconst Miku = () => {\n  const model = useLoader(MMDLoader, 'resources/muubu_miku/miku.pmx')\n  const model2 = useLoader(MMDLoader, 'resources/dot_miku/miku.pmx')\n  const model3 = useLoader(MMDLoader, 'resources/dot_miku_2020/miku.pmx')\n  const model4 = useLoader(MMDLoader, 'resources/dot_miku_honey_whip/miku.pmx')\n  const model5 = useLoader(MMDLoader, 'resources/dot_miku_star_voice/miku.pmx')\n\n  const { camera } = useThree()\n  const [helper, setHelper] = React.useState<MMDAnimationHelper>()\n\n  React.useEffect(() => {\n    if(model.visible) {\n      const start = async () => {\n        const loader = new MMDLoader()\n        const helper = new MMDAnimationHelper()\n\n        const cameraMotionClip = await loadAnimation(loader, camera as any, 'resources/hare_hare_yukai/camera.vmd')\n        helper.add(camera, { animation: cameraMotionClip })\n\n        const { audio } = await loadAudio('resources/hare_hare_yukai/music.mp3')\n        helper.add(audio, { delayTime: 0 }) // { delayTime: 160 * 1 / 30 }\n\n        const haruhiMotion = await loadAnimation(loader, model, 'resources/hare_hare_yukai/haruhi.vmd')\n        helper.add(model, { physics: true, animation: haruhiMotion })\n\n        const ashinaMotion = await loadAnimation(loader, model2, 'resources/hare_hare_yukai/asahina.vmd')\n        helper.add(model2, { physics: true, animation: ashinaMotion })\n\n        const yukiMotion = await loadAnimation(loader, model3, 'resources/hare_hare_yukai/yuki.vmd')\n        helper.add(model3, { physics: true, animation: yukiMotion })\n\n        const kyonMotion = await loadAnimation(loader, model4, 'resources/hare_hare_yukai/kyon.vmd')\n        helper.add(model4, { physics: true, animation: kyonMotion })\n\n        const koizumiMotion = await loadAnimation(loader, model5, 'resources/hare_hare_yukai/koizumi.vmd')\n        helper.add(model5, { physics: true, animation: koizumiMotion })\n\n        setHelper(helper)\n      }\n      start()\n    }\n    // eslint-disable-next-line\n  }, [model.visible])\n\n  useFrame((_, delta) => {\n    helper?.update(delta)\n  })\n\n  return (\n    <>\n      <primitive object={model} dispose={null} />\n      <primitive object={model2} dispose={null} />\n      <primitive object={model3} dispose={null} />\n      <primitive object={model4} dispose={null} />\n      <primitive object={model5} dispose={null} />\n    </>\n  )\n}\n\nconst loadAudio = (url: string): Promise<{audio: Audio<GainNode>, listener: AudioListener}> => {\n  const loader = new AudioLoader()\n  const listener = new AudioListener()\n  listener.position.z = 1\n  return new Promise(resolve => {\n    loader.load(url, buffer => {\n      const audio = new Audio(listener).setBuffer(buffer)\n      resolve({ audio, listener })\n    })\n  })\n}\n\n// const loadPose = (loader: MMDLoader, poseUrl: string): Promise<object> => {\n//   return new Promise(resolve => {\n//     loader.loadVPD(poseUrl, true, pose => {\n//       resolve(pose)\n//     })\n//   })\n// }\n\n","import React from 'react'\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport StandingPage from 'pages/Standing'\nimport WaveFilePage from 'pages/WaveFile'\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/' component={WaveFilePage} />\n        <Route exact path='/standing' component={StandingPage} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}